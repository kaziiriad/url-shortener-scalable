# # URL Shortener - Nginx Load Balancer & API Gateway Configuration
# # Handles load balancing for FastAPI instances and proxying for Celery Flower

# # Define upstream for FastAPI application instances
# upstream fastapi_backend {
#     # Load balancing algorithm: least_conn is best for API servers
#     least_conn;
    
#     # Health check parameters
#     # Note: nginx open source doesn't support health_check directive
#     # We rely on passive health checks (failed requests)
    
#     # FastAPI instances - Docker Compose creates these with service name
#     # Docker's internal DNS resolves 'web_app' to all replicas
#     server url_shortener_scalable-web_app-1:8000 max_fails=3 fail_timeout=30s;
#     server url_shortener_scalable-web_app-2:8000 max_fails=3 fail_timeout=30s;
#     server url_shortener_scalable-web_app-3:8000 max_fails=3 fail_timeout=30s;
    
#     # Keep connections alive for better performance
#     keepalive 32;
#     keepalive_timeout 60s;
# }

# # Define upstream for Celery Flower monitoring
# # upstream flower_backend {
# #     server celery_flower:5555 max_fails=2 fail_timeout=30s;
# #     keepalive 8;
# # }

# # Rate limiting zones
# limit_req_zone $binary_remote_addr zone=create_url_limit:10m rate=10r/m;
# limit_req_zone $binary_remote_addr zone=api_limit:10m rate=60r/m;
# limit_req_zone $binary_remote_addr zone=redirect_limit:10m rate=100r/s;
# limit_req_zone $binary_remote_addr zone=health_limit:10m rate=10r/s;
# limit_req_zone $binary_remote_addr zone=monitoring_limit:10m rate=30r/m;
# limit_req_zone $binary_remote_addr zone=flower_limit:10m rate=120r/m;

# # Connection limiting
# limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

# # Cache configuration for static assets and API responses
# proxy_cache_path /var/cache/nginx/api_cache levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60m use_temp_path=off;
# proxy_cache_path /var/cache/nginx/static_cache levels=1:2 keys_zone=static_cache:10m max_size=50m inactive=1h use_temp_path=off;

# # Logging format for detailed analytics
# log_format main_ext '$remote_addr - $remote_user [$time_local] "$request" '
#                     '$status $body_bytes_sent "$http_referer" '
#                     '"$http_user_agent" "$http_x_forwarded_for" '
#                     'rt=$request_time uct="$upstream_connect_time" '
#                     'uht="$upstream_header_time" urt="$upstream_response_time" '
#                     'upstream=$upstream_addr cache=$upstream_cache_status';

# server {
#     listen 80;
#     server_name _;
    
#     # Increase buffer sizes for better performance
#     client_body_buffer_size 128k;
#     client_max_body_size 10m;
#     client_header_buffer_size 1k;
#     large_client_header_buffers 4 8k;
    
#     # Timeouts
#     proxy_connect_timeout 60s;
#     proxy_send_timeout 60s;
#     proxy_read_timeout 60s;
#     send_timeout 60s;
    
#     # Access and error logs
#     access_log /var/log/nginx/access.log main_ext;
#     error_log /var/log/nginx/error.log warn;
    
#     # Connection limits (max 10 concurrent connections per IP)
#     limit_conn conn_limit 10;
    
#     # Gzip compression
#     gzip on;
#     gzip_vary on;
#     gzip_proxied any;
#     gzip_comp_level 6;
#     gzip_types text/plain text/css text/xml text/javascript 
#                application/json application/javascript application/xml+rss 
#                application/rss+xml application/atom+xml image/svg+xml;
    
#     # Security headers
#     add_header X-Content-Type-Options "nosniff" always;
#     add_header X-Frame-Options "SAMEORIGIN" always;
#     add_header X-XSS-Protection "1; mode=block" always;
#     add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
#     # ============================================
#     # HEALTH CHECK ENDPOINTS
#     # ============================================
    
#     # Nginx health check (for external load balancers)
#     location /nginx-health {
#         access_log off;
#         return 200 "healthy\n";
#         add_header Content-Type text/plain;
#     }
    
#     # Application health check (proxied to backend)
#     location /health {
#         limit_req zone=health_limit burst=5 nodelay;
        
#         proxy_pass http://fastapi_backend/health;
#         proxy_http_version 1.1;
#         proxy_set_header Connection "";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
        
#         # Don't cache health checks
#         proxy_no_cache 1;
#         proxy_cache_bypass 1;
        
#         # Quick timeout for health checks
#         proxy_connect_timeout 5s;
#         proxy_send_timeout 5s;
#         proxy_read_timeout 5s;
#     }
    
#     # ============================================
#     # MONITORING & ADMIN ENDPOINTS
#     # ============================================
    
#     # Detailed monitoring endpoints
#     location /monitoring/ {
#         limit_req zone=monitoring_limit burst=10 nodelay;
        
#         proxy_pass http://fastapi_backend/monitoring/;
#         proxy_http_version 1.1;
#         proxy_set_header Connection "";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
        
#         # Don't cache monitoring data
#         proxy_no_cache 1;
#         proxy_cache_bypass 1;
#     }
    
#     # Celery Flower Dashboard (Task Monitoring)
#     location /flower/ {
#         limit_req zone=flower_limit burst=20 nodelay;
        
#         proxy_pass http://celery_flower:5555/;
#         proxy_http_version 1.1;
#         proxy_set_header Authorization $http_authorization;
#         proxy_pass_header Authorization;

#         # WebSocket support for real-time updates
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
        
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_set_header X-Script-Name /flower;
        
#         # Longer timeout for Flower dashboard
#         proxy_read_timeout 300s;
#         proxy_send_timeout 300s;
        
#         # Don't cache Flower pages
#         proxy_no_cache 1;
#         proxy_cache_bypass 1;
#     }
    
#     # Flower static assets
#     location ~* ^/flower/static/(.+)$ {
#         proxy_pass http://celery_flower:5555/static/$1;
#         proxy_http_version 1.1;
#         proxy_set_header Connection "";
        
#         # Cache static assets
#         proxy_cache static_cache;
#         proxy_cache_valid 200 1h;
#         proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
#         add_header X-Cache-Status $upstream_cache_status;
        
#         expires 1h;
#     }
    
#     # ============================================
#     # API ENDPOINTS (WITH RATE LIMITING)
#     # ============================================
    
#     # URL Creation endpoint (strict rate limiting)
#     location /api/v1/create {
#         limit_req zone=create_url_limit burst=3 nodelay;
        
#         proxy_pass http://fastapi_backend/api/v1/create;
#         proxy_http_version 1.1;
#         proxy_set_header Connection "";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
        
#         # Request body buffering
#         proxy_request_buffering on;
        
#         # No caching for creation endpoints
#         proxy_no_cache 1;
#         proxy_cache_bypass 1;
#     }
    
#     # General API endpoints
#     location /api/ {
#         limit_req zone=api_limit burst=10 nodelay;
        
#         proxy_pass http://fastapi_backend/api/;
#         proxy_http_version 1.1;
#         proxy_set_header Connection "";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
        
#         # Cache GET requests for 60 seconds
#         proxy_cache api_cache;
#         proxy_cache_methods GET;
#         proxy_cache_valid 200 60s;
#         proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
#         proxy_cache_bypass $http_cache_control;
#         add_header X-Cache-Status $upstream_cache_status;
#     }
    
#     # ============================================
#     # API DOCUMENTATION
#     # ============================================
    
#     # FastAPI interactive documentation
#     location /docs {
#         proxy_pass http://fastapi_backend/docs;
#         proxy_http_version 1.1;
#         proxy_set_header Connection "";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
        
#         # Cache docs for 10 minutes
#         proxy_cache static_cache;
#         proxy_cache_valid 200 10m;
#         add_header X-Cache-Status $upstream_cache_status;
#     }
    
#     # OpenAPI schema
#     location /openapi.json {
#         proxy_pass http://fastapi_backend/openapi.json;
#         proxy_http_version 1.1;
#         proxy_set_header Connection "";
#         proxy_set_header Host $host;
        
#         # Cache schema for 10 minutes
#         proxy_cache static_cache;
#         proxy_cache_valid 200 10m;
#         add_header X-Cache-Status $upstream_cache_status;
#     }
    
#     # ReDoc documentation
#     location /redoc {
#         proxy_pass http://fastapi_backend/redoc;
#         proxy_http_version 1.1;
#         proxy_set_header Connection "";
#         proxy_set_header Host $host;
        
#         # Cache docs for 10 minutes
#         proxy_cache static_cache;
#         proxy_cache_valid 200 10m;
#         add_header X-Cache-Status $upstream_cache_status;
#     }
    
#     # ============================================
#     # URL REDIRECTION (HIGH THROUGHPUT)
#     # ============================================
    
#     # Root endpoint
#     location = / {
#         proxy_pass http://fastapi_backend/;
#         proxy_http_version 1.1;
#         proxy_set_header Connection "";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
    
#     # Short URL redirection (6-8 character alphanumeric keys)
#     # This is the main traffic path - optimize for speed
#     location ~ "^/([a-zA-Z0-9]{7})/?$" {
#         limit_req zone=redirect_limit burst=20 nodelay;
        
#         proxy_pass http://fastapi_backend;
#         proxy_http_version 1.1;
#         proxy_set_header Connection "";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
        
#         # Cache redirects for 30 seconds (balance freshness vs performance)
#         proxy_cache api_cache;
#         proxy_cache_key "$scheme$request_method$host$request_uri";
#         proxy_cache_valid 200 302 30s;
#         proxy_cache_valid 404 1m;
#         proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
#         proxy_cache_bypass $http_cache_control;
#         add_header X-Cache-Status $upstream_cache_status;
        
#         # Follow redirects
#         proxy_redirect off;
#         proxy_intercept_errors off;
        
#         # Quick timeout for redirects
#         proxy_connect_timeout 5s;
#         proxy_send_timeout 5s;
#         proxy_read_timeout 5s;
#     }
    
#     # ============================================
#     # ERROR PAGES
#     # ============================================
    
#     # Custom error pages
#     error_page 404 /404.html;
#     location = /404.html {
#         internal;
#         return 404 '{"error": "Not Found", "message": "The requested resource was not found"}';
#         add_header Content-Type application/json;
#     }
    
#     error_page 500 502 503 504 /50x.html;
#     location = /50x.html {
#         internal;
#         return 503 '{"error": "Service Unavailable", "message": "The service is temporarily unavailable. Please try again later."}';
#         add_header Content-Type application/json;
#     }
    
#     error_page 429 /429.html;
#     location = /429.html {
#         internal;
#         return 429 '{"error": "Too Many Requests", "message": "Rate limit exceeded. Please slow down."}';
#         add_header Content-Type application/json;
#     }
    
#     # ============================================
#     # SECURITY & BLOCKING
#     # ============================================
    
#     # Block common exploit attempts
#     location ~* /(\.git|\.env|\.htaccess|\.htpasswd|composer\.json|package\.json) {
#         deny all;
#         return 404;
#     }
    
#     # Block access to hidden files
#     location ~ /\. {
#         deny all;
#         access_log off;
#         log_not_found off;
#         return 404;
#     }
# }

# # HTTPS configuration (for future SSL/TLS setup)
# # Uncomment and configure when SSL certificates are available
# # server {
# #     listen 443 ssl http2;
# #     server_name your-domain.com;
# #     
# #     ssl_certificate /etc/nginx/ssl/cert.pem;
# #     ssl_certificate_key /etc/nginx/ssl/key.pem;
# #     ssl_protocols TLSv1.2 TLSv1.3;
# #     ssl_ciphers HIGH:!aNULL:!MD5;
# #     ssl_prefer_server_ciphers on;
# #     
# #     # Include all location blocks from above
# #     # ...
# # }

# URL Shortener - Nginx Load Balancer & API Gateway Configuration
# Handles load balancing for FastAPI instances and proxying for Celery Flower

# Define upstream for FastAPI application instances
upstream fastapi_backend {
    # Load balancing algorithm: least_conn is best for API servers
    least_conn;
    
    # Health check parameters
    # Note: nginx open source doesn't support health_check directive
    # We rely on passive health checks (failed requests)
    
    # FastAPI instances - Docker Compose creates these with service name
    # Docker's internal DNS resolves 'web_app' to all replicas
    server web_app:8000 max_fails=3 fail_timeout=30s;
    
    # Keep connections alive for better performance
    keepalive 32;
    keepalive_timeout 60s;
}

# Define upstream for Celery Flower monitoring
upstream flower_backend {
    server celery_flower:5555 max_fails=2 fail_timeout=30s;
    keepalive 8;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=create_url_limit:10m rate=10r/m;
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=60r/m;
limit_req_zone $binary_remote_addr zone=redirect_limit:10m rate=100r/s;
limit_req_zone $binary_remote_addr zone=health_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=monitoring_limit:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=flower_limit:10m rate=120r/m;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

# Cache configuration for static assets and API responses
proxy_cache_path /var/cache/nginx/api_cache levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60m use_temp_path=off;
proxy_cache_path /var/cache/nginx/static_cache levels=1:2 keys_zone=static_cache:10m max_size=50m inactive=1h use_temp_path=off;

# Logging format for detailed analytics
log_format main_ext '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time" '
                    'upstream=$upstream_addr cache=$upstream_cache_status';

server {
    listen 80;
    server_name _;
    
    # Increase buffer sizes for better performance
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    send_timeout 60s;
    
    # Access and error logs
    access_log /var/log/nginx/access.log main_ext;
    error_log /var/log/nginx/error.log warn;
    
    # Connection limits (max 10 concurrent connections per IP)
    limit_conn conn_limit 10;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml application/atom+xml image/svg+xml;
    
    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # ============================================
    # HEALTH CHECK ENDPOINTS
    # ============================================
    
    # Nginx health check (for external load balancers)
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Application health check (proxied to backend)
    location /health {
        limit_req zone=health_limit burst=5 nodelay;
        
        proxy_pass http://fastapi_backend/health;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Don't cache health checks
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        
        # Quick timeout for health checks
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # ============================================
    # MONITORING & ADMIN ENDPOINTS
    # ============================================
    
    # Detailed monitoring endpoints
    location /monitoring/ {
        limit_req zone=monitoring_limit burst=10 nodelay;
        
        proxy_pass http://fastapi_backend/monitoring/;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Don't cache monitoring data
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
    
    # Celery Flower Dashboard (Task Monitoring)
    location /flower/ {
        limit_req zone=flower_limit burst=20 nodelay;
        
        # Rewrite to remove /flower prefix before sending to backend
        # rewrite ^/flower/(.*)$ /$1 break;
        
        proxy_pass http://flower_backend;
        proxy_http_version 1.1;

        # WebSocket support for real-time updates
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Longer timeout for Flower dashboard
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
        
        # Don't cache Flower pages
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
    
    # Flower static assets
    location ~* "^/flower/static/(.+)$" {
        proxy_pass http://flower_backend/static/$1;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # Cache static assets
        proxy_cache static_cache;
        proxy_cache_valid 200 1h;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        add_header X-Cache-Status $upstream_cache_status;
        
        expires 1h;
    }
    
    # ============================================
    # API ENDPOINTS (WITH RATE LIMITING)
    # ============================================
    
    # URL Creation endpoint (strict rate limiting)
    location /api/v1/create {
        limit_req zone=create_url_limit burst=3 nodelay;
        
        proxy_pass http://fastapi_backend/api/v1/create;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Request body buffering
        proxy_request_buffering on;
        
        # No caching for creation endpoints
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
    
    # General API endpoints
    location /api/ {
        limit_req zone=api_limit burst=10 nodelay;
        
        proxy_pass http://fastapi_backend/api/;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache GET requests for 60 seconds
        proxy_cache api_cache;
        proxy_cache_methods GET;
        proxy_cache_valid 200 60s;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_bypass $http_cache_control;
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # ============================================
    # API DOCUMENTATION
    # ============================================
    
    # FastAPI interactive documentation
    location /docs {
        proxy_pass http://fastapi_backend/docs;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache docs for 10 minutes
        proxy_cache static_cache;
        proxy_cache_valid 200 10m;
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # OpenAPI schema
    location /openapi.json {
        proxy_pass http://fastapi_backend/openapi.json;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        
        # Cache schema for 10 minutes
        proxy_cache static_cache;
        proxy_cache_valid 200 10m;
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # ReDoc documentation
    location /redoc {
        proxy_pass http://fastapi_backend/redoc;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        
        # Cache docs for 10 minutes
        proxy_cache static_cache;
        proxy_cache_valid 200 10m;
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # ============================================
    # URL REDIRECTION (HIGH THROUGHPUT)
    # ============================================
    
    # Root endpoint
    location = / {
        proxy_pass http://fastapi_backend/;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Short URL redirection (6-8 character alphanumeric keys)
    # This is the main traffic path - optimize for speed
    location ~ "^/[a-zA-Z0-9]{6,8}$" {
        limit_req zone=redirect_limit burst=20 nodelay;
        
        proxy_pass http://fastapi_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache redirects for 30 seconds (balance freshness vs performance)
        proxy_cache api_cache;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_valid 200 302 30s;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_bypass $http_cache_control;
        add_header X-Cache-Status $upstream_cache_status;
        
        # Follow redirects
        proxy_redirect off;
        proxy_intercept_errors off;
        
        # Quick timeout for redirects
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # ============================================
    # ERROR PAGES
    # ============================================
    
    # Custom error pages
    error_page 404 /404.html;
    location = /404.html {
        internal;
        return 404 '{"error": "Not Found", "message": "The requested resource was not found"}';
        add_header Content-Type application/json;
    }
    
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        internal;
        return 503 '{"error": "Service Unavailable", "message": "The service is temporarily unavailable. Please try again later."}';
        add_header Content-Type application/json;
    }
    
    error_page 429 /429.html;
    location = /429.html {
        internal;
        return 429 '{"error": "Too Many Requests", "message": "Rate limit exceeded. Please slow down."}';
        add_header Content-Type application/json;
    }
    
    # ============================================
    # SECURITY & BLOCKING
    # ============================================
    
    # Block common exploit attempts
    location ~* /(\.git|\.env|\.htaccess|\.htpasswd|composer\.json|package\.json) {
        deny all;
        return 404;
    }
    
    # Block access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }
}

# HTTPS configuration (for future SSL/TLS setup)
# Uncomment and configure when SSL certificates are available
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
#     
#     ssl_certificate /etc/nginx/ssl/cert.pem;
#     ssl_certificate_key /etc/nginx/ssl/key.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#     
#     # Include all location blocks from above
#     # ...
# }